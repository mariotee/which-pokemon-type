{"version":3,"sources":["components/PokemonListItem/style.module.css","util/pokemon.ts","api.ts","util/string.ts","res/normal.png","res/grass.png","res/fire.png","res/water.png","res/electric.png","res/ice.png","res/fighting.png","res/poison.png","res/ground.png","res/flying.png","res/psychic.png","res/bug.png","res/rock.png","res/ghost.png","res/dark.png","res/dragon.png","res/steel.png","res/fairy.png","components/TypeSelect.tsx","components/PokeballSpinner.tsx","components/FetchButton.tsx","components/PokemonListItem/index.tsx","components/PokemonListItem/PokemonListItem.tsx","components/PokemonList.tsx","components/Attribution.tsx","components/ExclusiveTypeFilter.tsx","components/TypeMatchupModal.tsx","components/RegionFilters.tsx","components/NoPokemonPrompt.tsx","components/LegendaryMythicalFilters.tsx","App.tsx","index.tsx"],"names":["module","exports","TYPES","filterOutAlternatePokemon","data","filter","pt","pokemon","name","includes","getPokemonTypeData","type","a","axios","get","getPokemonData","pokemonType","url","replace","getSpeciesData","pokemonData","species","Capitalise","input","charAt","toUpperCase","slice","getSymbol","NormalSymbol","GrassSymbol","FireSymbol","WaterSymbol","ElectricSymbol","IceSymbol","FightingSymbol","PoisonSymbol","GroundSymbol","FlyingSymbol","PsychicSymbol","BugSymbol","RockSymbol","GhostSymbol","DarkSymbol","DragonSymbol","SteelSymbol","FairySymbol","Error","TypeSelect","title","value","onChange","Fragment","className","src","alt","width","e","target","map","PokeballSpinner","FetchButton","onClick","disabled","loading","Component","styles","pokeNumber","number","C","imageUrl","type1","type2","id","PokemonList","Attribution","href","ExclusiveTypeFilter","checked","TypeMatchupModal","show","onHide","getOffensiveMultiplier1","typeName","multiplier","strongAgainst","weakAgainst","zeroAgainst","getOffensiveMultiplier2","getDefensiveMultiplier","vulnerableTo","resistantTo","immuneTo","Modal","Header","closeButton","Body","RegionFilters","React","useState","open","setOpen","Collapse","in","NoPokemonPrompt","props","LegendaryMythicalFilters","legendary","mythical","App","loadingPokes","setLoadingPokes","loadingTypeData1","setLoadingTypeData1","loadingTypeData2","setLoadingTypeData2","noPokes","setNoPokes","showModal","setShowModal","exclusiveType","setExclusiveType","typeSelect1","setTypeSelect1","typeSelect2","setTypeSelect2","typeData1","setTypeData1","typeData2","setTypeData2","setType1","setType2","setPokemon","regionFilters","setRegionFilters","legendaryFilter","setLegendaryFilter","mythicalFilter","setMythicalFilter","useEffect","damage_relations","changeType1","changeType2","pushPokemonData","length","setTimeout","filteredData","pokemonDataSet","speciesData","push","sprites","front_default","types","isLegendary","is_legendary","isMythical","is_mythical","fetchPokemon","damages1","double_damage_to","t","double_damage_from","half_damage_to","half_damage_from","no_damage_to","no_damage_from","damages2","intersection","p","damages","region","x","prev","filteredByRegion","some","r","regions","getRegionsForPokemon","filteredByRegionAndType","undefined","checkFilters","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.01b503c6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"pokeNumber\":\"style_pokeNumber__2ctK-\"};","import { IPokemon, IPokemonFromType } from \"models/Pokemon\";\r\n\r\nexport const TYPES = [\r\n    \"normal\",\r\n    \"grass\",\r\n    \"fire\",\r\n    \"water\",\r\n    \"electric\",\r\n    \"ice\",\r\n    \"fighting\",\r\n    \"poison\",\r\n    \"ground\",\r\n    \"flying\",\r\n    \"psychic\",\r\n    \"bug\",\r\n    \"rock\",\r\n    \"ghost\",\r\n    \"dark\",\r\n    \"dragon\",\r\n    \"steel\",\r\n    \"fairy\",\r\n]\r\n\r\nexport const getRegionsForPokemon = (pokemon: IPokemon): string[] => {\r\n    const regions: string[] = [];\r\n\r\n    if (pokemon.number >= 1 && pokemon.number <= 151) {\r\n      regions.push(\"Kanto\");\r\n    }\r\n\r\n    if (pokemon.number >= 152 && pokemon.number <= 251) {\r\n      regions.push(\"Johto\");\r\n    }\r\n\r\n    if (pokemon.number >= 252 && pokemon.number <= 386) {\r\n      regions.push(\"Hoenn\");\r\n    }\r\n\r\n    if (pokemon.number >= 387 && pokemon.number <= 493) {\r\n      regions.push(\"Sinnoh\");\r\n    }\r\n\r\n    if (pokemon.number >= 494 && pokemon.number <= 649) {\r\n      regions.push(\"Unova\");\r\n    }\r\n\r\n    if (pokemon.number >= 650 && pokemon.number <= 721) {\r\n      regions.push(\"Kalos\");\r\n    }\r\n\r\n    if ((pokemon.number >= 722 && pokemon.number <= 809) || pokemon.name.includes(\"-alola\")) {\r\n      regions.push(\"Alola\");\r\n    }\r\n\r\n    if ((pokemon.number >= 810 && pokemon.number <= 898) || pokemon.name.includes(\"-galar\")) {\r\n      regions.push(\"Galar\");\r\n    }\r\n\r\n    return regions;\r\n}\r\n\r\nexport const filterOutAlternatePokemon = (data: IPokemonFromType[]) => {\r\n  return data.filter((pt) => {\r\n    const x = pt.pokemon.name;\r\n\r\n    return !x.includes(\"-totem\")     \r\n  });\r\n}","import axios from \"axios\";\r\nimport { IPokemonFromType } from \"models/Pokemon\";\r\n\r\nconst API_URL = \"https://pokeapi.co/api/v2/type\";\r\n\r\nexport const getPokemonTypeData = async (type: string) => {\r\n    return (await axios.get(`${API_URL}/${type}`)).data;\r\n}\r\n//trim is temprary until API gets patched\r\nexport const getPokemonData = async (pokemonType: IPokemonFromType) => {\r\n    return axios.get(pokemonType.pokemon.url.replace(/\\/$/,''));\r\n}\r\n\r\nexport const getSpeciesData = async (pokemonData: any) => {\r\n    return axios.get(pokemonData.species.url);\r\n}","export const Capitalise = (input: string) => {\r\n    return input.charAt(0).toUpperCase() + input.slice(1);\r\n}","export default __webpack_public_path__ + \"static/media/normal.a9776648.png\";","export default __webpack_public_path__ + \"static/media/grass.0c8a77ef.png\";","export default __webpack_public_path__ + \"static/media/fire.3277d77f.png\";","export default __webpack_public_path__ + \"static/media/water.2fcb40f7.png\";","export default __webpack_public_path__ + \"static/media/electric.2e3808d7.png\";","export default __webpack_public_path__ + \"static/media/ice.a9638502.png\";","export default __webpack_public_path__ + \"static/media/fighting.c777e8ec.png\";","export default __webpack_public_path__ + \"static/media/poison.8f3b0bcd.png\";","export default __webpack_public_path__ + \"static/media/ground.0ddb1818.png\";","export default __webpack_public_path__ + \"static/media/flying.7de276f3.png\";","export default __webpack_public_path__ + \"static/media/psychic.7f7cc4f4.png\";","export default __webpack_public_path__ + \"static/media/bug.167802fd.png\";","export default __webpack_public_path__ + \"static/media/rock.06ce1a1f.png\";","export default __webpack_public_path__ + \"static/media/ghost.7452d549.png\";","export default __webpack_public_path__ + \"static/media/dark.c0450a81.png\";","export default __webpack_public_path__ + \"static/media/dragon.3c3d4c99.png\";","export default __webpack_public_path__ + \"static/media/steel.86c2d7c9.png\";","export default __webpack_public_path__ + \"static/media/fairy.b3cc9537.png\";","import React from \"react\";\r\n\r\nimport { Capitalise } from \"util/string\";\r\nimport { TYPES } from \"util/pokemon\";\r\n\r\nimport NormalSymbol from \"res/normal.png\";\r\nimport GrassSymbol from \"res/grass.png\";\r\nimport FireSymbol from \"res/fire.png\";\r\nimport WaterSymbol from \"res/water.png\";\r\nimport ElectricSymbol from \"res/electric.png\";\r\nimport IceSymbol from \"res/ice.png\";\r\nimport FightingSymbol from \"res/fighting.png\";\r\nimport PoisonSymbol from \"res/poison.png\";\r\nimport GroundSymbol from \"res/ground.png\";\r\nimport FlyingSymbol from \"res/flying.png\";\r\nimport PsychicSymbol from \"res/psychic.png\";\r\nimport BugSymbol from \"res/bug.png\";\r\nimport RockSymbol from \"res/rock.png\";\r\nimport GhostSymbol from \"res/ghost.png\";\r\nimport DarkSymbol from \"res/dark.png\";\r\nimport DragonSymbol from \"res/dragon.png\";\r\nimport SteelSymbol from \"res/steel.png\";\r\nimport FairySymbol from \"res/fairy.png\";\r\n\r\n\r\ninterface ITypeSelectProps {\r\n    title: string;\r\n    value: string;\r\n    onChange(input: string): void;\r\n}\r\n\r\nconst getSymbol = (pokemonType: string) => {\r\n    switch (pokemonType)\r\n    {\r\n        case \"normal\": return NormalSymbol;\r\n        case \"grass\": return GrassSymbol;\r\n        case \"fire\": return FireSymbol;\r\n        case \"water\": return WaterSymbol;\r\n        case \"electric\": return ElectricSymbol;\r\n        case \"ice\": return IceSymbol;\r\n        case \"fighting\": return FightingSymbol;\r\n        case \"poison\": return PoisonSymbol;\r\n        case \"ground\": return GroundSymbol;\r\n        case \"flying\": return FlyingSymbol;\r\n        case \"psychic\": return PsychicSymbol;\r\n        case \"bug\": return BugSymbol;\r\n        case \"rock\": return RockSymbol;\r\n        case \"ghost\": return GhostSymbol;\r\n        case \"dark\": return DarkSymbol;\r\n        case \"dragon\": return DragonSymbol;\r\n        case \"steel\": return SteelSymbol;\r\n        case \"fairy\": return FairySymbol;\r\n        default: throw Error(\"not an expected type: \" + pokemonType);\r\n    }\r\n}\r\n\r\nconst TypeSelect = ({title, value, onChange}: ITypeSelectProps) => {\r\n    return <React.Fragment>\r\n        <div className=\"d-flex m-auto w-50 justify-content-between align-items-center\">\r\n            <label className=\"lbl\">{title}</label>\r\n            {value && <img src={getSymbol(value)} alt={\"Type: \" + value} width={32} />}\r\n        </div>\r\n        <select className=\"form-control w-50 my-3 mx-auto\" value={value} onChange={(e) => {onChange(e.target.value)}}>\r\n        <option></option>\r\n        {\r\n            TYPES.map((type) => <option key={\"type1-o-\"+type} value={type}>{Capitalise(type)}</option>)\r\n        }\r\n        </select>\r\n    </React.Fragment>\r\n}\r\n\r\nexport default TypeSelect;","import React from \"react\";\r\n\r\nconst PokeballSpinner = () => <div className=\"pokeball-spinner\" />\r\n\r\nexport default PokeballSpinner;\r\n","import React from \"react\";\r\nimport PokeballSpinner from \"./PokeballSpinner\";\r\n\r\ninterface IFetchButtonProps {\r\n    onClick(): void;\r\n    disabled: boolean;\r\n    loading: boolean;\r\n}\r\n\r\nconst FetchButton = ({onClick, disabled, loading}: IFetchButtonProps) => <button className=\"btn btn-info d-block m-auto py-3\" onClick={onClick} disabled={disabled}>\r\n    {\r\n        loading \r\n            ? <div className=\"d-flex align-items-center\">Loading... <PokeballSpinner /></div>\r\n            : \"Find Pokemon!\" \r\n    }\r\n</button>\r\n\r\nexport default FetchButton;","import Component from \"./PokemonListItem\";\r\n\r\nexport default Component;","import { IPokemon } from \"models/Pokemon\";\r\nimport { Capitalise as C } from \"util/string\";\r\n\r\nimport styles from \"./style.module.css\";\r\n\r\nexport interface IPokemonListItemProps {\r\n    pokemon: IPokemon;\r\n}\r\n\r\nconst PokemonListItem = ({pokemon}: IPokemonListItemProps) => {\r\n  return <li className=\"list-group-item\" key={\"pokemon-\" + pokemon.id}>\r\n      <div className={styles.pokeNumber}>#{pokemon.number}</div>\r\n      <div>\r\n        {C(pokemon.name)}\r\n        {pokemon.imageUrl ? <img src={pokemon.imageUrl} alt={pokemon.name} /> : <strong className=\"d-block\"> No Image Available</strong>}\r\n      </div>\r\n      <p>Types: {C(pokemon.type1)}{pokemon.type2 && `, ${C(pokemon.type2)}`}</p>\r\n  </li>\r\n}\r\n\r\nexport default PokemonListItem;","import { IPokemon } from \"models/Pokemon\";\r\n\r\nimport PokemonListItem from \"components/PokemonListItem\";\r\n\r\ninterface IPokemonListProps {\r\n    data: IPokemon[];\r\n}\r\n\r\nconst PokemonList = ({data}: IPokemonListProps) => <ul className=\"list-group poke-list\">\r\n{\r\n    data.map((pokemon) => <PokemonListItem key={\"pli\"+pokemon.id} pokemon={pokemon} />)\r\n}\r\n</ul>\r\n\r\nexport default PokemonList;","const Attribution = () => <footer className=\"text-left mx-4\">\r\n    <p>\r\n        Pokémon and Pokémon character names are trademarks of Nintendo\r\n        <br/>\r\n        Data from: <a href=\"https://pokeapi.co/\">Poke API</a>\r\n        <br/>\r\n        Pokemon Type Images from: <a href=\"https://www.deviantart.com/falke2009\">Falke2009 on DeviantArt</a>\r\n    </p>\r\n</footer>\r\n\r\nexport default Attribution;","interface IExclusiveTypeFilterProps {\r\n    checked: boolean;\r\n    onChange(): void;\r\n}\r\n\r\nconst ExclusiveTypeFilter = ({checked, onChange}: IExclusiveTypeFilterProps) => <div>\r\n    <label>Filter exclusively on Type 1</label><input className=\"mx-4\" type=\"checkbox\" checked={checked} onChange={onChange} />\r\n</div>\r\n\r\nexport default ExclusiveTypeFilter;","import { Modal } from 'react-bootstrap';\r\n\r\nimport { IPokemonType } from 'models/Pokemon';\r\n\r\nimport { TYPES } from 'util/pokemon';\r\nimport { Capitalise as C } from \"util/string\";\r\n\r\nexport interface ITypeMatchupModalProps {\r\n    show: boolean;\r\n    onHide(): void;\r\n    type1: IPokemonType;\r\n    type2: IPokemonType;\r\n}\r\n\r\nconst TypeMatchupModal = ({show, onHide, type1, type2}: ITypeMatchupModalProps) => {\r\n    const getOffensiveMultiplier1 = (typeName: string) => {        \r\n        let multiplier = 1;\r\n\r\n        if (!type1.name) {\r\n            return \"\";\r\n        }\r\n\r\n        multiplier *= type1.strongAgainst.includes(typeName) ? 2 : 1;\r\n        multiplier *= type1.weakAgainst.includes(typeName) ? 0.5 : 1;\r\n        multiplier *= type1.zeroAgainst.includes(typeName) ? 0 : 1;\r\n\r\n        return \"x\"+multiplier;\r\n    }\r\n\r\n    const getOffensiveMultiplier2 = (typeName: string) => {\r\n        if (!type2.name) {\r\n            return \"\";\r\n        }\r\n\r\n        let multiplier = 1;\r\n\r\n        multiplier *= type2.strongAgainst.includes(typeName) ? 2 : 1;\r\n        multiplier *= type2.weakAgainst.includes(typeName) ? 0.5 : 1;\r\n        multiplier *= type2.zeroAgainst.includes(typeName) ? 0 : 1;\r\n\r\n        return \"x\"+multiplier;\r\n    }\r\n\r\n    const getDefensiveMultiplier = (typeName: string) => {\r\n        if (!type1.name && !type2.name) {\r\n            return \"\";\r\n        }\r\n\r\n        let multiplier = 1;\r\n\r\n        if (type1.name) {\r\n            multiplier *= type1.vulnerableTo.includes(typeName) ? 2 : 1;\r\n            multiplier *= type1.resistantTo.includes(typeName) ? 0.5 : 1;\r\n            multiplier *= type1.immuneTo.includes(typeName) ? 0 : 1;\r\n        }\r\n\r\n        if (type2.name) {\r\n            multiplier *= type2.vulnerableTo.includes(typeName) ? 2 : 1;\r\n            multiplier *= type2.resistantTo.includes(typeName) ? 0.5 : 1;\r\n            multiplier *= type2.immuneTo.includes(typeName) ? 0 : 1;\r\n        }\r\n\r\n        return \"x\"+multiplier;\r\n    }\r\n\r\n    return <Modal show={show} onHide={onHide}>\r\n        <Modal.Header closeButton={true}><h3>Type Matchups</h3></Modal.Header>\r\n        <Modal.Body>\r\n        <table className=\"table table-striped table-sm\">\r\n            <thead>\r\n                <tr>\r\n                    <td className=\"table-primary\">Opponent Type</td>\r\n                    <td className=\"table-primary\">{type1.name && \"Offense \"+C(type1.name)}</td>\r\n                    <td className=\"table-primary\">{type2.name && \"Offense \"+C(type2.name)}</td>\r\n                    <td className=\"table-primary\">{(type1.name || type2.name) && \"Defense \"}</td>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n            {\r\n                TYPES.map((type) => <tr key={\"tr-\"+type}>\r\n                    <td>{C(type)}</td>\r\n                    <td>{getOffensiveMultiplier1(type)}</td>\r\n                    <td>{getOffensiveMultiplier2(type)}</td>\r\n                    <td>{getDefensiveMultiplier(type)}</td>\r\n                </tr>)\r\n            }\r\n            </tbody>\r\n        </table>\r\n        </Modal.Body>\r\n    </Modal>\r\n}\r\n\r\nexport default TypeMatchupModal;\r\n","import React from \"react\";\r\nimport { Collapse } from \"react-bootstrap\";\r\n\r\nexport interface IRegionFiltersProps {\r\n    data: string[];\r\n    onChange(input: string): void;    \r\n}\r\n\r\nexport default function RegionFilters ({data, onChange}: IRegionFiltersProps) {    \r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  return <div className=\"m-3\">\r\n    <span className=\"border p-1\" onClick={() => setOpen(!open)}>\r\n        Filter by Region <span className={open ? \"text-secondary\":\"text-primary\"}>{open ? \"▲\" : \"▼\"}</span>\r\n    </span>\r\n    <Collapse in={open}>\r\n        <div className=\"m-3\">\r\n            <div className=\"d-inline-block\">\r\n                <label>Kanto</label>\r\n                <input className=\"ml-1 mr-3\" type=\"checkbox\" value={\"Kanto\"} onChange={(e) => onChange(e.target.value)} checked={data.includes(\"Kanto\")} />\r\n            </div>\r\n            <div className=\"d-inline-block\">\r\n                <label>Johto</label>\r\n                <input className=\"ml-1 mr-3\" type=\"checkbox\" value={\"Johto\"} onChange={(e) => onChange(e.target.value)} checked={data.includes(\"Johto\")} />\r\n            </div>\r\n            <div className=\"d-inline-block\">\r\n                <label>Hoenn</label>\r\n                <input className=\"ml-1 mr-3\" type=\"checkbox\" value={\"Hoenn\"} onChange={(e) => onChange(e.target.value)} checked={data.includes(\"Hoenn\")} />\r\n            </div>\r\n            <div className=\"d-inline-block\">\r\n                <label>Sinnoh</label>\r\n                <input className=\"ml-1 mr-3\" type=\"checkbox\" value={\"Sinnoh\"} onChange={(e) => onChange(e.target.value)} checked={data.includes(\"Sinnoh\")} />\r\n            </div>\r\n            <div className=\"d-inline-block\">\r\n                <label>Unova</label>\r\n                <input className=\"ml-1 mr-3\" type=\"checkbox\" value={\"Unova\"} onChange={(e) => onChange(e.target.value)} checked={data.includes(\"Unova\")} />\r\n            </div>\r\n            <div className=\"d-inline-block\">\r\n                <label>Kalos</label>\r\n                <input className=\"ml-1 mr-3\" type=\"checkbox\" value={\"Kalos\"} onChange={(e) => onChange(e.target.value)} checked={data.includes(\"Kalos\")} />\r\n            </div>\r\n            <div className=\"d-inline-block\">\r\n                <label>Alola</label>\r\n                <input className=\"ml-1 mr-3\" type=\"checkbox\" value={\"Alola\"} onChange={(e) => onChange(e.target.value)} checked={data.includes(\"Alola\")} />\r\n            </div>\r\n            <div className=\"d-inline-block\">\r\n                <label>Galar</label>\r\n                <input className=\"ml-1 mr-3\" type=\"checkbox\" value={\"Galar\"} onChange={(e) => onChange(e.target.value)} checked={data.includes(\"Galar\")} />\r\n            </div>\r\n        </div>\r\n    </Collapse>\r\n  </div>\r\n}\r\n","export interface INoPokemonPromptProps {\r\n}\r\n\r\nexport default function NoPokemonPrompt (props: INoPokemonPromptProps) {\r\n  return <p className=\"my-5 font-weight-bold text-danger\">\r\n      No Pokemon Were Found With These Types\r\n  </p>\r\n}\r\n","export interface ILegendaryMythicalFiltersProps {\r\n    legendary: boolean;\r\n    mythical: boolean;\r\n    onChange(input: string): void;    \r\n}\r\n\r\nexport default function LegendaryMythicalFilters ({legendary, mythical, onChange}: ILegendaryMythicalFiltersProps) {    \r\n  return <div className=\"m-3\">\r\n        <div className=\"m-3\">\r\n            <div className=\"d-inline-block\">\r\n                <label>Legendary</label>\r\n                <input className=\"ml-1 mr-3\" value=\"legendary\" type=\"checkbox\" onChange={(e) => onChange(e.target.value)} checked={legendary} />\r\n            </div>\r\n            <div className=\"d-inline-block\">\r\n                <label>Mythical</label>\r\n                <input className=\"ml-1 mr-3\" value=\"mythical\" type=\"checkbox\" onChange={(e) => onChange(e.target.value)} checked={mythical} />\r\n            </div>\r\n        </div>\r\n  </div>\r\n}\r\n","import React from 'react';\r\n\r\nimport './App.css';\r\n\r\nimport {\r\n    IPokemon,\r\n    IPokemonFromType,\r\n    IPokemonType,\r\n    IPokemonTypeData,\r\n    IPokemonTypeDataItem\r\n} from 'models/Pokemon';\r\n\r\nimport { filterOutAlternatePokemon, getRegionsForPokemon } from 'util/pokemon';\r\nimport { getPokemonData, getPokemonTypeData, getSpeciesData } from 'api';\r\n\r\nimport TypeSelect from 'components/TypeSelect';\r\nimport FetchButton from \"components/FetchButton\";\r\nimport PokemonList from 'components/PokemonList';\r\nimport Attribution from 'components/Attribution';\r\nimport ExclusiveTypeFilter from 'components/ExclusiveTypeFilter';\r\nimport TypeMatchupModal from 'components/TypeMatchupModal';\r\nimport RegionFilters from 'components/RegionFilters';\r\nimport NoPokemonPrompt from 'components/NoPokemonPrompt';\r\nimport LegendaryMythicalFilters from 'components/LegendaryMythicalFilters';\r\n\r\nconst App = () => {\r\n    const [loadingPokes, setLoadingPokes] = React.useState(false);\r\n    const [loadingTypeData1, setLoadingTypeData1] = React.useState(false);\r\n    const [loadingTypeData2, setLoadingTypeData2] = React.useState(false);\r\n    const [noPokes, setNoPokes] = React.useState(false);\r\n    const [showModal, setShowModal] = React.useState(false);\r\n    const [exclusiveType, setExclusiveType] = React.useState(false);\r\n    const [typeSelect1, setTypeSelect1] = React.useState(\"\");\r\n    const [typeSelect2, setTypeSelect2] = React.useState(\"\");\r\n\r\n    const [typeData1, setTypeData1] = React.useState({} as IPokemonTypeData);\r\n    const [typeData2, setTypeData2] = React.useState({} as IPokemonTypeData);\r\n\r\n    const [type1, setType1] = React.useState({} as IPokemonType)\r\n    const [type2, setType2] = React.useState({} as IPokemonType)\r\n\r\n    const [pokemon, setPokemon] = React.useState([] as IPokemon[]);\r\n    const [regionFilters, setRegionFilters] = React.useState([] as string[]);\r\n    const [legendaryFilter, setLegendaryFilter] = React.useState(false);\r\n    const [mythicalFilter, setMythicalFilter] = React.useState(false);\r\n\r\n    React.useEffect(() => {\r\n        if (loadingTypeData1 && !loadingTypeData2 && typeData1.damage_relations) {\r\n            setLoadingTypeData1(false);\r\n        } else if (loadingTypeData2 && !loadingTypeData1 && typeData2.damage_relations) {\r\n            setLoadingTypeData2(false);\r\n        } else if (loadingTypeData1 && loadingTypeData2\r\n            && typeData1.damage_relations && typeData2.damage_relations) {\r\n            setLoadingTypeData1(false);\r\n            setLoadingTypeData2(false);\r\n        }\r\n\r\n    }, [loadingTypeData1, loadingTypeData2, typeData1, typeData2, typeSelect1, typeSelect2])\r\n\r\n    const changeType1 = async (type: string) => {\r\n        if (type === \"\") {\r\n            setTypeData1({} as IPokemonTypeData);\r\n            setTypeSelect1(type);\r\n\r\n            return;\r\n        }\r\n\r\n        setLoadingTypeData1(true);\r\n        setTypeData1({} as IPokemonTypeData);\r\n        setTypeSelect1(type);\r\n\r\n        setTypeData1(await getPokemonTypeData(type));\r\n    }\r\n\r\n    const changeType2 = async (type: string) => {\r\n        if (type === \"\") {\r\n            setTypeData2({} as IPokemonTypeData);\r\n            setTypeSelect2(type);\r\n\r\n            return;\r\n        }\r\n\r\n        setLoadingTypeData2(true);\r\n        setTypeData2({} as IPokemonTypeData);\r\n        setTypeSelect2(type);\r\n\r\n        setTypeData2(await getPokemonTypeData(type));\r\n    }\r\n\r\n    const pushPokemonData = async (data: IPokemonFromType[]) => {\r\n        if (data.length === 0) {\r\n            setNoPokes(true);\r\n\r\n            setTimeout(() => setNoPokes(false), 3000);\r\n\r\n            return;\r\n        }\r\n\r\n        setNoPokes(false);\r\n\r\n        const filteredData = filterOutAlternatePokemon(data);\r\n        const pokemonDataSet: IPokemon[] = [];\r\n\r\n        for (const pokemonType of filteredData) {\r\n\r\n            let pokemonData = await getPokemonData(pokemonType);\r\n\r\n            const speciesData = await getSpeciesData(pokemonData.data);\r\n\r\n            pokemonDataSet.push({\r\n                id: pokemonData.data.id,\r\n                name: pokemonData.data.name,\r\n                number: speciesData.data.id,\r\n                imageUrl: pokemonData.data.sprites.front_default,\r\n                type1: pokemonData.data.types[0].type.name,\r\n                type2: pokemonData.data.types[1]?.type.name,\r\n                isLegendary: speciesData.data.is_legendary,\r\n                isMythical: speciesData.data.is_mythical,\r\n            })\r\n\r\n            setPokemon([...pokemonDataSet]);\r\n        }\r\n    }\r\n\r\n    const fetchPokemon = async () => {\r\n        if (loadingTypeData1 || loadingTypeData2) {\r\n            setPokemon([]);\r\n\r\n            return;\r\n        }\r\n\r\n        if (!typeSelect1 && !typeSelect2) {\r\n            return;\r\n        }\r\n\r\n        setPokemon([]);\r\n        setLoadingPokes(true);\r\n\r\n        if (typeData1.damage_relations && typeData2.damage_relations) {\r\n            let damages1 = typeData1.damage_relations;\r\n\r\n            setType1({\r\n                name: typeData1.name,\r\n                strongAgainst: damages1.double_damage_to.map((t: IPokemonTypeDataItem) => t.name),\r\n                vulnerableTo: damages1.double_damage_from.map((t: IPokemonTypeDataItem) => t.name),\r\n                weakAgainst: damages1.half_damage_to.map((t: IPokemonTypeDataItem) => t.name),\r\n                resistantTo: damages1.half_damage_from.map((t: IPokemonTypeDataItem) => t.name),\r\n                zeroAgainst: damages1.no_damage_to.map((t: IPokemonTypeDataItem) => t.name),\r\n                immuneTo: damages1.no_damage_from.map((t: IPokemonTypeDataItem) => t.name),\r\n            });\r\n\r\n            let damages2 = typeData2.damage_relations;\r\n\r\n            setType2({\r\n                name: typeData2.name,\r\n                strongAgainst: damages2.double_damage_to.map((t: IPokemonTypeDataItem) => t.name),\r\n                vulnerableTo: damages2.double_damage_from.map((t: IPokemonTypeDataItem) => t.name),\r\n                weakAgainst: damages2.half_damage_to.map((t: IPokemonTypeDataItem) => t.name),\r\n                resistantTo: damages2.half_damage_from.map((t: IPokemonTypeDataItem) => t.name),\r\n                zeroAgainst: damages2.no_damage_to.map((t: IPokemonTypeDataItem) => t.name),\r\n                immuneTo: damages1.no_damage_from.map((t: IPokemonTypeDataItem) => t.name),\r\n            });\r\n\r\n            let intersection = typeData1.pokemon\r\n                .filter((t) => typeData2.pokemon\r\n                    .map((p) => p.pokemon.name).includes(t.pokemon.name));\r\n\r\n            await pushPokemonData(intersection);\r\n        } else if (typeData1.damage_relations) {\r\n            let damages = typeData1.damage_relations;\r\n\r\n            setType1({\r\n                name: typeData1.name,\r\n                strongAgainst: damages.double_damage_to.map((t) => t.name),\r\n                vulnerableTo: damages.double_damage_from.map((t) => t.name),\r\n                weakAgainst: damages.half_damage_to.map((t) => t.name),\r\n                resistantTo: damages.half_damage_from.map((t) => t.name),\r\n                zeroAgainst: damages.no_damage_to.map((t) => t.name),\r\n                immuneTo: damages.no_damage_from.map((t) => t.name),\r\n            });\r\n\r\n            setType2({} as IPokemonType);\r\n\r\n            await pushPokemonData(typeData1.pokemon);\r\n        } else if (typeData2.damage_relations) {\r\n            let damages = typeData2.damage_relations;\r\n\r\n            setType2({\r\n                name: typeData2.name,\r\n                strongAgainst: damages.double_damage_to.map((t) => t.name),\r\n                vulnerableTo: damages.double_damage_from.map((t) => t.name),\r\n                weakAgainst: damages.half_damage_to.map((t) => t.name),\r\n                resistantTo: damages.half_damage_from.map((t) => t.name),\r\n                zeroAgainst: damages.no_damage_to.map((t) => t.name),\r\n                immuneTo: damages.no_damage_from.map((t) => t.name),\r\n            });\r\n\r\n            setType1({} as IPokemonType);\r\n\r\n            await pushPokemonData(typeData2.pokemon);\r\n        }\r\n\r\n        setLoadingPokes(false);\r\n    }\r\n\r\n    const toggleExclusiveType = () => {\r\n        setExclusiveType(!exclusiveType);\r\n    }\r\n\r\n    const checkFilters = (data: IPokemon[]) => {\r\n        let filteredByRegion = regionFilters.length > 0\r\n            ? data.filter((p) =>\r\n                regionFilters.some((r) =>\r\n                    getRegionsForPokemon(p).includes(r)))\r\n            : data;\r\n\r\n        let filteredByRegionAndType = (!typeSelect2 && exclusiveType)\r\n            ? filteredByRegion.filter((x) => x.type1 === typeSelect1 && x.type2 === undefined)\r\n            : filteredByRegion;\r\n\r\n        if (legendaryFilter && mythicalFilter) {\r\n            return filteredByRegionAndType.filter((x) => x.isLegendary || x.isMythical)\r\n        } else if (legendaryFilter) {\r\n            return filteredByRegionAndType.filter((x) => x.isLegendary)\r\n        } else if (mythicalFilter) {\r\n            return filteredByRegionAndType.filter((x) => x.isMythical)\r\n        }\r\n\r\n        return filteredByRegionAndType;\r\n    }\r\n\r\n    const changeRegionFilter = (region: string) => {\r\n        if (regionFilters.includes(region)) {\r\n            setRegionFilters(regionFilters.filter((x) => x !== region));\r\n        } else {\r\n            setRegionFilters([...regionFilters, region]);\r\n        }\r\n    }\r\n\r\n    const changeLegendaryOrMythicalFilter = (input: string) => {\r\n        if (input === \"legendary\") {\r\n            setLegendaryFilter((prev) => !prev);\r\n        }\r\n\r\n        if (input === \"mythical\") {\r\n            setMythicalFilter((prev) => !prev);\r\n        }\r\n    }\r\n\r\n    return <div className=\"App my-2 mx-auto\">\r\n        <h3>Pokemon Types</h3>\r\n        <TypeSelect title={\"Type 1\"} value={typeSelect1} onChange={changeType1} />\r\n        <ExclusiveTypeFilter checked={exclusiveType && !typeSelect2} onChange={toggleExclusiveType} />\r\n        <TypeSelect title={\"Type 2\"} value={typeSelect2} onChange={changeType2} />\r\n        {(pokemon.length > 0) && <button className=\"btn btn-primary d-block mx-auto my-3\" onClick={() => setShowModal(true)}>Show Type Matchups</button>}\r\n        <TypeMatchupModal show={showModal} onHide={() => setShowModal(false)} type1={type1} type2={type2} />\r\n        <FetchButton disabled={loadingPokes || loadingTypeData1 || loadingTypeData2} loading={loadingPokes} onClick={fetchPokemon} />\r\n        {\r\n            pokemon.length > 0 && <RegionFilters data={regionFilters} onChange={changeRegionFilter} />\r\n        }\r\n        {\r\n            pokemon.length > 0 && <LegendaryMythicalFilters legendary={legendaryFilter} mythical={mythicalFilter} onChange={changeLegendaryOrMythicalFilter} />\r\n        }\r\n        {noPokes && <NoPokemonPrompt />}\r\n        <PokemonList data={checkFilters(pokemon)} />\r\n        <Attribution />\r\n    </div>\r\n}\r\n\r\nexport default App;\r\n","\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from 'App';\r\n\r\n//import reportWebVitals from './reportWebVitals';\r\nimport './index.css';\r\nimport \"./bootstrap.min.css\";\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n//reportWebVitals();\r\n"],"sourceRoot":""}