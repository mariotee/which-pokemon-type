{"version":3,"sources":["components/PokemonListItem/style.module.css","Util/string.ts","res/normal.png","res/grass.png","res/fire.png","res/water.png","res/electric.png","res/ice.png","res/fighting.png","res/poison.png","res/ground.png","res/flying.png","res/psychic.png","res/bug.png","res/rock.png","res/ghost.png","res/dark.png","res/dragon.png","res/steel.png","res/fairy.png","components/TypeSelect.tsx","components/FetchButton.tsx","components/PokemonListItem/index.tsx","components/PokemonListItem/PokemonListItem.tsx","components/PokemonList.tsx","components/Attribution.tsx","components/PokeballSpinner.tsx","components/ExclusiveTypeFilter.tsx","App.tsx","index.tsx"],"names":["module","exports","Capitalise","input","charAt","toUpperCase","slice","TYPES","getSymbol","pokemonType","NormalSymbol","GrassSymbol","FireSymbol","WaterSymbol","ElectricSymbol","IceSymbol","FightingSymbol","PoisonSymbol","GroundSymbol","FlyingSymbol","PsychicSymbol","BugSymbol","RockSymbol","GhostSymbol","DarkSymbol","DragonSymbol","SteelSymbol","FairySymbol","TypeSelect","title","value","onChange","Fragment","className","e","target","map","type","src","alt","FetchButton","onClick","Component","pokemon","styles","pokeNumber","number","C","name","imageUrl","type1","type2","id","PokemonList","data","Attribution","href","PokeballSpinner","ExclusiveTypeFilter","checked","API_URL","App","React","useState","loading","setLoading","exclusiveType","setExclusiveType","setType1","setType2","setPokemon","selectPokemonData","a","filteredData","filter","x","includes","pokemonDataSet","axios","get","url","pokemonData","push","species","split","sprites","front_default","types","fetchPokemon","length","data1","data2","undefined","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.909bfd13.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"pokeNumber\":\"style_pokeNumber__2ctK-\"};","export const Capitalise = (input: string) => {\r\n    return input.charAt(0).toUpperCase() + input.slice(1);\r\n}","export default __webpack_public_path__ + \"static/media/normal.a9776648.png\";","export default __webpack_public_path__ + \"static/media/grass.0c8a77ef.png\";","export default __webpack_public_path__ + \"static/media/fire.3277d77f.png\";","export default __webpack_public_path__ + \"static/media/water.2fcb40f7.png\";","export default __webpack_public_path__ + \"static/media/electric.2e3808d7.png\";","export default __webpack_public_path__ + \"static/media/ice.a9638502.png\";","export default __webpack_public_path__ + \"static/media/fighting.c777e8ec.png\";","export default __webpack_public_path__ + \"static/media/poison.8f3b0bcd.png\";","export default __webpack_public_path__ + \"static/media/ground.0ddb1818.png\";","export default __webpack_public_path__ + \"static/media/flying.7de276f3.png\";","export default __webpack_public_path__ + \"static/media/psychic.7f7cc4f4.png\";","export default __webpack_public_path__ + \"static/media/bug.167802fd.png\";","export default __webpack_public_path__ + \"static/media/rock.06ce1a1f.png\";","export default __webpack_public_path__ + \"static/media/ghost.7452d549.png\";","export default __webpack_public_path__ + \"static/media/dark.c0450a81.png\";","export default __webpack_public_path__ + \"static/media/dragon.3c3d4c99.png\";","export default __webpack_public_path__ + \"static/media/steel.86c2d7c9.png\";","export default __webpack_public_path__ + \"static/media/fairy.b3cc9537.png\";","import React from \"react\";\r\n\r\nimport { Capitalise } from \"Util/string\";\r\n\r\nimport NormalSymbol from \"res/normal.png\";\r\nimport GrassSymbol from \"res/grass.png\";\r\nimport FireSymbol from \"res/fire.png\";\r\nimport WaterSymbol from \"res/water.png\";\r\nimport ElectricSymbol from \"res/electric.png\";\r\nimport IceSymbol from \"res/ice.png\";\r\nimport FightingSymbol from \"res/fighting.png\";\r\nimport PoisonSymbol from \"res/poison.png\";\r\nimport GroundSymbol from \"res/ground.png\";\r\nimport FlyingSymbol from \"res/flying.png\";\r\nimport PsychicSymbol from \"res/psychic.png\";\r\nimport BugSymbol from \"res/bug.png\";\r\nimport RockSymbol from \"res/rock.png\";\r\nimport GhostSymbol from \"res/ghost.png\";\r\nimport DarkSymbol from \"res/dark.png\";\r\nimport DragonSymbol from \"res/dragon.png\";\r\nimport SteelSymbol from \"res/steel.png\";\r\nimport FairySymbol from \"res/fairy.png\";\r\n\r\nconst TYPES = [\r\n    \"normal\",\r\n    \"grass\",\r\n    \"fire\",\r\n    \"water\",\r\n    \"electric\",\r\n    \"ice\",\r\n    \"fighting\",\r\n    \"poison\",\r\n    \"ground\",\r\n    \"flying\",\r\n    \"psychic\",\r\n    \"bug\",\r\n    \"rock\",\r\n    \"ghost\",\r\n    \"dark\",\r\n    \"dragon\",\r\n    \"steel\",\r\n    \"fairy\",\r\n  ]\r\n\r\ninterface ITypeSelectProps {\r\n    title: string;\r\n    value: string;\r\n    onChange(input: string): void;\r\n}\r\n\r\nconst getSymbol = (pokemonType: string) => {\r\n    switch (pokemonType)\r\n    {\r\n        case \"normal\": return NormalSymbol;\r\n        case \"grass\": return GrassSymbol;\r\n        case \"fire\": return FireSymbol;\r\n        case \"water\": return WaterSymbol;\r\n        case \"electric\": return ElectricSymbol;\r\n        case \"ice\": return IceSymbol;\r\n        case \"fighting\": return FightingSymbol;\r\n        case \"poison\": return PoisonSymbol;\r\n        case \"ground\": return GroundSymbol;\r\n        case \"flying\": return FlyingSymbol;\r\n        case \"psychic\": return PsychicSymbol;\r\n        case \"bug\": return BugSymbol;\r\n        case \"rock\": return RockSymbol;\r\n        case \"ghost\": return GhostSymbol;\r\n        case \"dark\": return DarkSymbol;\r\n        case \"dragon\": return DragonSymbol;\r\n        case \"steel\": return SteelSymbol;\r\n        case \"fairy\": return FairySymbol;\r\n    }\r\n}\r\n\r\nconst TypeSelect = ({title, value, onChange}: ITypeSelectProps) => {\r\n    return <React.Fragment>\r\n        <label className=\"d-block\">{title}</label>\r\n        <select className=\"form-control\" value={value} onChange={(e) => {onChange(e.target.value)}}>\r\n        <option></option>\r\n        {\r\n            TYPES.map((type) => <option key={\"type1-o-\"+type} value={type}>{Capitalise(type)}</option>)\r\n        }\r\n        </select>\r\n        {value && <img src={getSymbol(value)} alt={\"Type: \" + value} />}\r\n    </React.Fragment>\r\n}\r\n\r\nexport default TypeSelect;","import React from \"react\";\r\n\r\ninterface IFetchButtonProps {\r\n    onClick(): void;\r\n}\r\n\r\nconst FetchButton = ({onClick}: IFetchButtonProps) => <button className=\"btn btn-primary d-block w-100\" onClick={onClick}>\r\n    Find Me Pokemon!\r\n</button>\r\n\r\nexport default FetchButton;","import Component from \"./PokemonListItem\";\r\n\r\nexport default Component;","import { IPokemon } from \"models/Pokemon\";\r\nimport { Capitalise as C } from \"Util/string\";\r\n\r\nimport styles from \"./style.module.css\";\r\n\r\nexport interface IPokemonListItemProps {\r\n    pokemon: IPokemon;\r\n}\r\n\r\nconst PokemonListItem = ({pokemon}: IPokemonListItemProps) => {\r\n  return <li className=\"list-group-item\" key={\"pokemon-\" + pokemon.id}>\r\n      <span className={styles.pokeNumber}>#{pokemon.number}</span>\r\n      {C(pokemon.name)}\r\n        {pokemon.imageUrl ? <img src={pokemon.imageUrl} alt={pokemon.name} /> : <strong> No Image Available</strong>}\r\n        <p>Types: {C(pokemon.type1)}{pokemon.type2 && `, ${C(pokemon.type2)}`}</p>\r\n  </li>\r\n}\r\n\r\nexport default PokemonListItem;","import { IPokemon } from \"models/Pokemon\";\r\n\r\nimport PokemonListItem from \"components/PokemonListItem\";\r\n\r\ninterface IPokemonListProps {\r\n    data: IPokemon[];\r\n}\r\n\r\nconst PokemonList = ({data}: IPokemonListProps) => <ul className=\"list-group poke-list\">\r\n{\r\n    data.map((pokemon) => <PokemonListItem pokemon={pokemon} />)\r\n}\r\n</ul>\r\n\r\nexport default PokemonList;","const Attribution = () => <footer className=\"text-left\">\r\n    <p>\r\n        Pokémon and Pokémon character names are trademarks of Nintendo\r\n        <br/>\r\n        Data from: <a href=\"https://pokeapi.co/\">Poke API</a>\r\n        <br/>\r\n        Pokemon Type Images from: <a href=\"https://www.deviantart.com/falke2009\">Falke2009 on DeviantArt</a>\r\n    </p>\r\n</footer>\r\n\r\nexport default Attribution;","import React from \"react\";\r\n\r\nconst PokeballSpinner = () => <React.Fragment>\r\n    <div className=\"pokeball-spinner\" />\r\n    <span>Loading...</span>\r\n</React.Fragment>\r\n\r\nexport default PokeballSpinner;\r\n","interface IExclusiveTypeFilterProps {\r\n    checked: boolean;\r\n    onChange(): void;\r\n}\r\n\r\nconst ExclusiveTypeFilter = ({checked, onChange}: IExclusiveTypeFilterProps) => <div>\r\n    <label>Filter exclusively on Type 1</label><input className=\"mx-4\" type=\"checkbox\" checked={checked} onChange={onChange} />\r\n</div>\r\n\r\nexport default ExclusiveTypeFilter;","import React from 'react';\r\nimport axios from \"axios\";\r\n\r\nimport './App.css';\r\n\r\nimport { IPokemon, IPokemonFromType } from 'models/Pokemon';\r\n\r\nimport TypeSelect from 'components/TypeSelect';\r\nimport FetchButton from \"components/FetchButton\";\r\nimport PokemonList from 'components/PokemonList';\r\nimport Attribution from 'components/Attribution';\r\nimport PokeballSpinner from 'components/PokeballSpinner';\r\nimport ExclusiveTypeFilter from 'components/ExclusiveTypeFilter';\r\n\r\nconst API_URL = \"https://pokeapi.co/api/v2/type\";\r\n\r\nconst App = () => {\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [exclusiveType, setExclusiveType] = React.useState(false);\r\n  const [type1, setType1] = React.useState(\"\" as string);\r\n  const [type2, setType2] = React.useState(\"\" as string);  \r\n\r\n  const [pokemon, setPokemon] = React.useState([] as IPokemon[]);\r\n\r\n  const selectPokemonData = async (data: IPokemonFromType[]): Promise<IPokemon[]> => {    \r\n    const filteredData = data.filter((x) => !x.pokemon.name.includes(\"-totem\") && !x.pokemon.name.includes(\"-gmax\"));\r\n    const pokemonDataSet: IPokemon[] = [];\r\n\r\n    for (const pokemonType of filteredData) {\r\n      let pokemonData = await axios.get(pokemonType.pokemon.url);\r\n\r\n      pokemonDataSet.push({\r\n        id: pokemonData.data.id,\r\n        name: pokemonData.data.name,\r\n        number: pokemonData.data.species.url.split(\"/\")[6],\r\n        imageUrl: pokemonData.data.sprites.front_default,\r\n        type1: pokemonData.data.types[0].type.name,\r\n        type2: pokemonData.data.types[1] && pokemonData.data.types[1].type.name,\r\n      })\r\n    }\r\n\r\n    return pokemonDataSet;\r\n  }\r\n\r\n  const fetchPokemon = async () => {\r\n    setPokemon([]);\r\n    setLoading(true);\r\n\r\n    if (type1.length > 0 && type2.length > 0) {\r\n      let data1 = await selectPokemonData((await axios.get(`${API_URL}/${type1}`)).data.pokemon);\r\n      let data2 = await selectPokemonData((await axios.get(`${API_URL}/${type2}`)).data.pokemon);\r\n                  \r\n      setPokemon(data1.filter((x: IPokemon) => data2.map((x) => x.id).includes(x.id)));\r\n    } else if (type1.length > 0) {\r\n      let data = await selectPokemonData((await axios.get(`${API_URL}/${type1}`)).data.pokemon);\r\n\r\n      setPokemon(data);\r\n    } else if (type2.length > 0) {\r\n      let data = await selectPokemonData((await axios.get(`${API_URL}/${type2}`)).data.pokemon);\r\n\r\n      setPokemon(data);\r\n    }\r\n\r\n    setLoading(false);\r\n  }\r\n\r\n  const toggleExclusiveType = () => {\r\n    setExclusiveType(!exclusiveType);\r\n  }\r\n  \r\n  const checkFiltered = (data: IPokemon[]) => {\r\n    return (!type2 && exclusiveType) \r\n      ? data.filter((x) => x.type1 === type1 && x.type2 === undefined) \r\n      : data;\r\n  }\r\n\r\n  return <div className=\"App\">\r\n      <h1>Pokemon Types</h1>\r\n      <TypeSelect title={\"Type 1\"} value={type1} onChange={setType1} />\r\n      <ExclusiveTypeFilter checked={exclusiveType && !type2} onChange={toggleExclusiveType} />\r\n      <TypeSelect title={\"Type 2\"} value={type2} onChange={setType2} />\r\n      <FetchButton onClick={fetchPokemon} />\r\n      { loading && <PokeballSpinner /> }\r\n      <PokemonList data={checkFiltered(pokemon)} />\r\n      <Attribution />\r\n  </div>\r\n}\r\n\r\nexport default App;\r\n","\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from 'App';\r\n\r\n//import reportWebVitals from './reportWebVitals';\r\nimport './index.css';\r\nimport \"./bootstrap.min.css\";\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n//reportWebVitals();\r\n"],"sourceRoot":""}