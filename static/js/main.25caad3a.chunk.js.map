{"version":3,"sources":["components/PokemonListItem/style.module.css","util/pokemon.ts","api.ts","util/string.ts","res/normal.png","res/grass.png","res/fire.png","res/water.png","res/electric.png","res/ice.png","res/fighting.png","res/poison.png","res/ground.png","res/flying.png","res/psychic.png","res/bug.png","res/rock.png","res/ghost.png","res/dark.png","res/dragon.png","res/steel.png","res/fairy.png","components/TypeSelect.tsx","components/PokeballSpinner.tsx","components/FetchButton.tsx","components/PokemonListItem/index.tsx","components/PokemonListItem/PokemonListItem.tsx","components/PokemonList.tsx","components/Attribution.tsx","components/ExclusiveTypeFilter.tsx","components/TypeMatchupModal.tsx","components/RegionFilters.tsx","components/NoPokemonPrompt.tsx","App.tsx","index.tsx"],"names":["module","exports","TYPES","filterOutAlternatePokemon","data","filter","pt","x","pokemon","name","includes","endsWith","startsWith","getPokemonTypeData","type","a","axios","get","getPokemonData","pokemonType","url","Capitalise","input","charAt","toUpperCase","slice","getSymbol","NormalSymbol","GrassSymbol","FireSymbol","WaterSymbol","ElectricSymbol","IceSymbol","FightingSymbol","PoisonSymbol","GroundSymbol","FlyingSymbol","PsychicSymbol","BugSymbol","RockSymbol","GhostSymbol","DarkSymbol","DragonSymbol","SteelSymbol","FairySymbol","Error","TypeSelect","title","value","onChange","Fragment","className","src","alt","width","e","target","map","PokeballSpinner","FetchButton","onClick","disabled","loading","Component","styles","pokeNumber","number","C","imageUrl","type1","type2","id","PokemonList","Attribution","href","ExclusiveTypeFilter","checked","TypeMatchupModal","show","onHide","getOffensiveMultiplier1","typeName","multiplier","strongAgainst","weakAgainst","zeroAgainst","getOffensiveMultiplier2","getDefensiveMultiplier","vulnerableTo","resistantTo","immuneTo","Modal","Header","closeButton","Body","RegionFilters","React","useState","open","setOpen","Collapse","in","NoPokemonPrompt","props","App","loadingPokes","setLoadingPokes","loadingTypeData1","setLoadingTypeData1","loadingTypeData2","setLoadingTypeData2","noPokes","setNoPokes","showModal","setShowModal","exclusiveType","setExclusiveType","typeSelect1","setTypeSelect1","typeSelect2","setTypeSelect2","typeData1","setTypeData1","typeData2","setTypeData2","setType1","setType2","setPokemon","regionFilters","setRegionFilters","useEffect","damage_relations","changeType1","changeType2","pushPokemonData","length","setTimeout","filteredData","pokemonDataSet","pokemonData","push","species","split","sprites","front_default","types","fetchPokemon","damages1","double_damage_to","t","double_damage_from","half_damage_to","half_damage_from","no_damage_to","no_damage_from","damages2","intersection","p","damages","region","filteredByRegion","some","r","regions","getRegionsForPokemon","undefined","checkFilters","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.25caad3a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"pokeNumber\":\"style_pokeNumber__2ctK-\"};","import { IPokemon, IPokemonFromType } from \"models/Pokemon\";\r\n\r\nexport const TYPES = [\r\n    \"normal\",\r\n    \"grass\",\r\n    \"fire\",\r\n    \"water\",\r\n    \"electric\",\r\n    \"ice\",\r\n    \"fighting\",\r\n    \"poison\",\r\n    \"ground\",\r\n    \"flying\",\r\n    \"psychic\",\r\n    \"bug\",\r\n    \"rock\",\r\n    \"ghost\",\r\n    \"dark\",\r\n    \"dragon\",\r\n    \"steel\",\r\n    \"fairy\",\r\n]\r\n\r\nexport const getRegionsForPokemon = (pokemon: IPokemon): string[] => {\r\n    const regions: string[] = [];\r\n\r\n    if (pokemon.number >= 1 && pokemon.number <= 151) {\r\n      regions.push(\"Kanto\");\r\n    }\r\n\r\n    if (pokemon.number >= 152 && pokemon.number <= 251) {\r\n      regions.push(\"Johto\");\r\n    }\r\n\r\n    if (pokemon.number >= 252 && pokemon.number <= 386) {\r\n      regions.push(\"Hoenn\");\r\n    }\r\n\r\n    if (pokemon.number >= 387 && pokemon.number <= 493) {\r\n      regions.push(\"Sinnoh\");\r\n    }\r\n\r\n    if (pokemon.number >= 494 && pokemon.number <= 649) {\r\n      regions.push(\"Unova\");\r\n    }\r\n\r\n    if (pokemon.number >= 650 && pokemon.number <= 721) {\r\n      regions.push(\"Kalos\");\r\n    }\r\n\r\n    if ((pokemon.number >= 722 && pokemon.number <= 809) || pokemon.name.includes(\"-alola\")) {\r\n      regions.push(\"Alola\");\r\n    }\r\n\r\n    if ((pokemon.number >= 810 && pokemon.number <= 898) || pokemon.name.includes(\"-galar\")) {\r\n      regions.push(\"Galar\");\r\n    }\r\n\r\n    return regions;\r\n}\r\n\r\nexport const filterOutAlternatePokemon = (data: IPokemonFromType[]) => {\r\n  return data.filter((pt) => {\r\n    const x = pt.pokemon.name;\r\n\r\n    return !x.includes(\"-totem\") \r\n    && !x.includes(\"-gmax\")\r\n    && !x.includes(\"-mega\")\r\n    //maybe when they add sprite in PokeAPI\r\n    && !x.endsWith(\"-battle-bond\")\r\n    //maybe when they add sprite in PokeAPI\r\n    && !x.endsWith(\"-ash\")\r\n    //maybe when they add sprite in PokeAPI\r\n    && !x.endsWith(\"-school\")\r\n    && !x.endsWith(\"-10\")\r\n    && !x.endsWith(\"-50\")\r\n    && !x.endsWith(\"-cap\")\r\n    //maybe when they add sprite in PokeAPI\r\n    && !x.endsWith(\"-eternamax\")\r\n    //maybe when they add sprites in PokeAPI\r\n    && !(x.startsWith(\"minior-\") && x !== \"minior-red-meteor\")\r\n    //maybe when they add sprites in PokeAPI\r\n    && !x.endsWith(\"lycanroc-midnight\")\r\n    //maybe when they add sprites in PokeAPI\r\n    && !x.endsWith(\"lycanroc-dusk\")\r\n    //maybe when they add sprites in PokeAPI\r\n    && !x.endsWith(\"rockruff-own-tempo\")\r\n    //maybe when they add sprite in PokeAPI\r\n    && !x.endsWith(\"-busted\")\r\n    //maybe when they add sprite in PokeAPI\r\n    && !x.endsWith(\"magearna-original\");\r\n  });\r\n}","import axios from \"axios\";\r\nimport { IPokemonFromType } from \"models/Pokemon\";\r\n\r\nconst API_URL = \"https://pokeapi.co/api/v2/type\";\r\n\r\nexport const getPokemonTypeData = async (type: string) => {\r\n    return (await axios.get(`${API_URL}/${type}`)).data;\r\n}\r\n\r\nexport const getPokemonData = async (pokemonType: IPokemonFromType) => {\r\n    return await axios.get(pokemonType.pokemon.url);\r\n}","export const Capitalise = (input: string) => {\r\n    return input.charAt(0).toUpperCase() + input.slice(1);\r\n}","export default __webpack_public_path__ + \"static/media/normal.a9776648.png\";","export default __webpack_public_path__ + \"static/media/grass.0c8a77ef.png\";","export default __webpack_public_path__ + \"static/media/fire.3277d77f.png\";","export default __webpack_public_path__ + \"static/media/water.2fcb40f7.png\";","export default __webpack_public_path__ + \"static/media/electric.2e3808d7.png\";","export default __webpack_public_path__ + \"static/media/ice.a9638502.png\";","export default __webpack_public_path__ + \"static/media/fighting.c777e8ec.png\";","export default __webpack_public_path__ + \"static/media/poison.8f3b0bcd.png\";","export default __webpack_public_path__ + \"static/media/ground.0ddb1818.png\";","export default __webpack_public_path__ + \"static/media/flying.7de276f3.png\";","export default __webpack_public_path__ + \"static/media/psychic.7f7cc4f4.png\";","export default __webpack_public_path__ + \"static/media/bug.167802fd.png\";","export default __webpack_public_path__ + \"static/media/rock.06ce1a1f.png\";","export default __webpack_public_path__ + \"static/media/ghost.7452d549.png\";","export default __webpack_public_path__ + \"static/media/dark.c0450a81.png\";","export default __webpack_public_path__ + \"static/media/dragon.3c3d4c99.png\";","export default __webpack_public_path__ + \"static/media/steel.86c2d7c9.png\";","export default __webpack_public_path__ + \"static/media/fairy.b3cc9537.png\";","import React from \"react\";\r\n\r\nimport { Capitalise } from \"util/string\";\r\nimport { TYPES } from \"util/pokemon\";\r\n\r\nimport NormalSymbol from \"res/normal.png\";\r\nimport GrassSymbol from \"res/grass.png\";\r\nimport FireSymbol from \"res/fire.png\";\r\nimport WaterSymbol from \"res/water.png\";\r\nimport ElectricSymbol from \"res/electric.png\";\r\nimport IceSymbol from \"res/ice.png\";\r\nimport FightingSymbol from \"res/fighting.png\";\r\nimport PoisonSymbol from \"res/poison.png\";\r\nimport GroundSymbol from \"res/ground.png\";\r\nimport FlyingSymbol from \"res/flying.png\";\r\nimport PsychicSymbol from \"res/psychic.png\";\r\nimport BugSymbol from \"res/bug.png\";\r\nimport RockSymbol from \"res/rock.png\";\r\nimport GhostSymbol from \"res/ghost.png\";\r\nimport DarkSymbol from \"res/dark.png\";\r\nimport DragonSymbol from \"res/dragon.png\";\r\nimport SteelSymbol from \"res/steel.png\";\r\nimport FairySymbol from \"res/fairy.png\";\r\n\r\n\r\ninterface ITypeSelectProps {\r\n    title: string;\r\n    value: string;\r\n    onChange(input: string): void;\r\n}\r\n\r\nconst getSymbol = (pokemonType: string) => {\r\n    switch (pokemonType)\r\n    {\r\n        case \"normal\": return NormalSymbol;\r\n        case \"grass\": return GrassSymbol;\r\n        case \"fire\": return FireSymbol;\r\n        case \"water\": return WaterSymbol;\r\n        case \"electric\": return ElectricSymbol;\r\n        case \"ice\": return IceSymbol;\r\n        case \"fighting\": return FightingSymbol;\r\n        case \"poison\": return PoisonSymbol;\r\n        case \"ground\": return GroundSymbol;\r\n        case \"flying\": return FlyingSymbol;\r\n        case \"psychic\": return PsychicSymbol;\r\n        case \"bug\": return BugSymbol;\r\n        case \"rock\": return RockSymbol;\r\n        case \"ghost\": return GhostSymbol;\r\n        case \"dark\": return DarkSymbol;\r\n        case \"dragon\": return DragonSymbol;\r\n        case \"steel\": return SteelSymbol;\r\n        case \"fairy\": return FairySymbol;\r\n        default: throw Error(\"not an expected type: \" + pokemonType);\r\n    }\r\n}\r\n\r\nconst TypeSelect = ({title, value, onChange}: ITypeSelectProps) => {\r\n    return <React.Fragment>\r\n        <div className=\"d-flex m-auto w-50 justify-content-between align-items-center\">\r\n            <label className=\"lbl-large\">{title}</label>\r\n            {value && <img src={getSymbol(value)} alt={\"Type: \" + value} width={40} />}\r\n        </div>\r\n        <select className=\"form-control w-50 my-3 mx-auto\" value={value} onChange={(e) => {onChange(e.target.value)}}>\r\n        <option></option>\r\n        {\r\n            TYPES.map((type) => <option key={\"type1-o-\"+type} value={type}>{Capitalise(type)}</option>)\r\n        }\r\n        </select>\r\n    </React.Fragment>\r\n}\r\n\r\nexport default TypeSelect;","import React from \"react\";\r\n\r\nconst PokeballSpinner = () => <div className=\"pokeball-spinner\" />\r\n\r\nexport default PokeballSpinner;\r\n","import React from \"react\";\r\nimport PokeballSpinner from \"./PokeballSpinner\";\r\n\r\ninterface IFetchButtonProps {\r\n    onClick(): void;\r\n    disabled: boolean;\r\n    loading: boolean;\r\n}\r\n\r\nconst FetchButton = ({onClick, disabled, loading}: IFetchButtonProps) => <button className=\"btn btn-info d-block m-auto py-3\" onClick={onClick} disabled={disabled}>\r\n    {\r\n        loading \r\n            ? <div className=\"d-flex align-items-center\">Loading... <PokeballSpinner /></div>\r\n            : \"Find Pokemon!\" \r\n    }\r\n</button>\r\n\r\nexport default FetchButton;","import Component from \"./PokemonListItem\";\r\n\r\nexport default Component;","import { IPokemon } from \"models/Pokemon\";\r\nimport { Capitalise as C } from \"util/string\";\r\n\r\nimport styles from \"./style.module.css\";\r\n\r\nexport interface IPokemonListItemProps {\r\n    pokemon: IPokemon;\r\n}\r\n\r\nconst PokemonListItem = ({pokemon}: IPokemonListItemProps) => {\r\n  return <li className=\"list-group-item\" key={\"pokemon-\" + pokemon.id}>\r\n      <div className={styles.pokeNumber}>#{pokemon.number}</div>\r\n      <div>\r\n        {C(pokemon.name)}\r\n        {pokemon.imageUrl ? <img src={pokemon.imageUrl} alt={pokemon.name} /> : <strong className=\"d-block\"> No Image Available</strong>}\r\n      </div>\r\n      <p>Types: {C(pokemon.type1)}{pokemon.type2 && `, ${C(pokemon.type2)}`}</p>\r\n  </li>\r\n}\r\n\r\nexport default PokemonListItem;","import { IPokemon } from \"models/Pokemon\";\r\n\r\nimport PokemonListItem from \"components/PokemonListItem\";\r\n\r\ninterface IPokemonListProps {\r\n    data: IPokemon[];\r\n}\r\n\r\nconst PokemonList = ({data}: IPokemonListProps) => <ul className=\"list-group poke-list\">\r\n{\r\n    data.map((pokemon) => <PokemonListItem key={\"pli\"+pokemon.id} pokemon={pokemon} />)\r\n}\r\n</ul>\r\n\r\nexport default PokemonList;","const Attribution = () => <footer className=\"text-left mx-4\">\r\n    <p>\r\n        Pokémon and Pokémon character names are trademarks of Nintendo\r\n        <br/>\r\n        Data from: <a href=\"https://pokeapi.co/\">Poke API</a>\r\n        <br/>\r\n        Pokemon Type Images from: <a href=\"https://www.deviantart.com/falke2009\">Falke2009 on DeviantArt</a>\r\n    </p>\r\n</footer>\r\n\r\nexport default Attribution;","interface IExclusiveTypeFilterProps {\r\n    checked: boolean;\r\n    onChange(): void;\r\n}\r\n\r\nconst ExclusiveTypeFilter = ({checked, onChange}: IExclusiveTypeFilterProps) => <div>\r\n    <label>Filter exclusively on Type 1</label><input className=\"mx-4\" type=\"checkbox\" checked={checked} onChange={onChange} />\r\n</div>\r\n\r\nexport default ExclusiveTypeFilter;","import { Modal } from 'react-bootstrap';\r\n\r\nimport { IPokemonType } from 'models/Pokemon';\r\n\r\nimport { TYPES } from 'util/pokemon';\r\nimport { Capitalise as C } from \"util/string\";\r\n\r\nexport interface ITypeMatchupModalProps {\r\n    show: boolean;\r\n    onHide(): void;\r\n    type1: IPokemonType;\r\n    type2: IPokemonType;\r\n}\r\n\r\nconst TypeMatchupModal = ({show, onHide, type1, type2}: ITypeMatchupModalProps) => {\r\n    const getOffensiveMultiplier1 = (typeName: string) => {        \r\n        let multiplier = 1;\r\n\r\n        if (!type1.name) {\r\n            return \"\";\r\n        }\r\n\r\n        multiplier *= type1.strongAgainst.includes(typeName) ? 2 : 1;\r\n        multiplier *= type1.weakAgainst.includes(typeName) ? 0.5 : 1;\r\n        multiplier *= type1.zeroAgainst.includes(typeName) ? 0 : 1;\r\n\r\n        return \"x\"+multiplier;\r\n    }\r\n\r\n    const getOffensiveMultiplier2 = (typeName: string) => {\r\n        if (!type2.name) {\r\n            return \"\";\r\n        }\r\n\r\n        let multiplier = 1;\r\n\r\n        multiplier *= type2.strongAgainst.includes(typeName) ? 2 : 1;\r\n        multiplier *= type2.weakAgainst.includes(typeName) ? 0.5 : 1;\r\n        multiplier *= type2.zeroAgainst.includes(typeName) ? 0 : 1;\r\n\r\n        return \"x\"+multiplier;\r\n    }\r\n\r\n    const getDefensiveMultiplier = (typeName: string) => {\r\n        if (!type1.name && !type2.name) {\r\n            return \"\";\r\n        }\r\n\r\n        let multiplier = 1;\r\n\r\n        if (type1.name) {\r\n            multiplier *= type1.vulnerableTo.includes(typeName) ? 2 : 1;\r\n            multiplier *= type1.resistantTo.includes(typeName) ? 0.5 : 1;\r\n            multiplier *= type1.immuneTo.includes(typeName) ? 0 : 1;\r\n        }\r\n\r\n        if (type2.name) {\r\n            multiplier *= type2.vulnerableTo.includes(typeName) ? 2 : 1;\r\n            multiplier *= type2.resistantTo.includes(typeName) ? 0.5 : 1;\r\n            multiplier *= type2.immuneTo.includes(typeName) ? 0 : 1;\r\n        }\r\n\r\n        return \"x\"+multiplier;\r\n    }\r\n\r\n    return <Modal show={show} onHide={onHide}>\r\n        <Modal.Header closeButton={true}><h3>Type Matchups</h3></Modal.Header>\r\n        <Modal.Body>\r\n        <table className=\"table table-striped table-sm\">\r\n            <thead>\r\n                <tr>\r\n                    <td className=\"table-primary\">Opponent Type</td>\r\n                    <td className=\"table-primary\">{type1.name && \"Offense \"+C(type1.name)}</td>\r\n                    <td className=\"table-primary\">{type2.name && \"Offense \"+C(type2.name)}</td>\r\n                    <td className=\"table-primary\">{(type1.name || type2.name) && \"Defense \"}</td>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n            {\r\n                TYPES.map((type) => <tr key={\"tr-\"+type}>\r\n                    <td>{C(type)}</td>\r\n                    <td>{getOffensiveMultiplier1(type)}</td>\r\n                    <td>{getOffensiveMultiplier2(type)}</td>\r\n                    <td>{getDefensiveMultiplier(type)}</td>\r\n                </tr>)\r\n            }\r\n            </tbody>\r\n        </table>\r\n        </Modal.Body>\r\n    </Modal>\r\n}\r\n\r\nexport default TypeMatchupModal;\r\n","import React from \"react\";\r\nimport { Collapse } from \"react-bootstrap\";\r\n\r\nexport interface IRegionFiltersProps {\r\n    data: string[];\r\n    onChange(input: string): void;    \r\n}\r\n\r\nexport default function RegionFilters ({data, onChange}: IRegionFiltersProps) {    \r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  return <div className=\"m-3\">\r\n    <span className=\"border p-1\" onClick={() => setOpen(!open)}>\r\n        Filter by Region <span className={open ? \"text-secondary\":\"text-primary\"}>{open ? \"▲\" : \"▼\"}</span>\r\n    </span>\r\n    <Collapse in={open}>\r\n        <div className=\"m-3\">\r\n            <div className=\"d-inline-block\">\r\n                <label>Kanto</label>\r\n                <input className=\"ml-1 mr-3\" type=\"checkbox\" value={\"Kanto\"} onChange={(e) => onChange(e.target.value)} checked={data.includes(\"Kanto\")} />\r\n            </div>\r\n            <div className=\"d-inline-block\">\r\n                <label>Johto</label>\r\n                <input className=\"ml-1 mr-3\" type=\"checkbox\" value={\"Johto\"} onChange={(e) => onChange(e.target.value)} checked={data.includes(\"Johto\")} />\r\n            </div>\r\n            <div className=\"d-inline-block\">\r\n                <label>Hoenn</label>\r\n                <input className=\"ml-1 mr-3\" type=\"checkbox\" value={\"Hoenn\"} onChange={(e) => onChange(e.target.value)} checked={data.includes(\"Hoenn\")} />\r\n            </div>\r\n            <div className=\"d-inline-block\">\r\n                <label>Sinnoh</label>\r\n                <input className=\"ml-1 mr-3\" type=\"checkbox\" value={\"Sinnoh\"} onChange={(e) => onChange(e.target.value)} checked={data.includes(\"Sinnoh\")} />\r\n            </div>\r\n            <div className=\"d-inline-block\">\r\n                <label>Unova</label>\r\n                <input className=\"ml-1 mr-3\" type=\"checkbox\" value={\"Unova\"} onChange={(e) => onChange(e.target.value)} checked={data.includes(\"Unova\")} />\r\n            </div>\r\n            <div className=\"d-inline-block\">\r\n                <label>Kalos</label>\r\n                <input className=\"ml-1 mr-3\" type=\"checkbox\" value={\"Kalos\"} onChange={(e) => onChange(e.target.value)} checked={data.includes(\"Kalos\")} />\r\n            </div>\r\n            <div className=\"d-inline-block\">\r\n                <label>Alola</label>\r\n                <input className=\"ml-1 mr-3\" type=\"checkbox\" value={\"Alola\"} onChange={(e) => onChange(e.target.value)} checked={data.includes(\"Alola\")} />\r\n            </div>\r\n            <div className=\"d-inline-block\">\r\n                <label>Galar</label>\r\n                <input className=\"ml-1 mr-3\" type=\"checkbox\" value={\"Galar\"} onChange={(e) => onChange(e.target.value)} checked={data.includes(\"Galar\")} />\r\n            </div>\r\n        </div>\r\n    </Collapse>\r\n  </div>\r\n}\r\n","export interface INoPokemonPromptProps {\r\n}\r\n\r\nexport default function NoPokemonPrompt (props: INoPokemonPromptProps) {\r\n  return <p className=\"my-5 font-weight-bold text-danger\">\r\n      No Pokemon Were Found With These Types\r\n  </p>\r\n}\r\n","import React from 'react';\r\n\r\nimport './App.css';\r\n\r\nimport { \r\n  IPokemon, \r\n  IPokemonFromType, \r\n  IPokemonType, \r\n  IPokemonTypeData, \r\n  IPokemonTypeDataItem \r\n} from 'models/Pokemon';\r\n\r\nimport { filterOutAlternatePokemon, getRegionsForPokemon } from 'util/pokemon';\r\nimport { getPokemonData, getPokemonTypeData } from 'api';\r\n\r\nimport TypeSelect from 'components/TypeSelect';\r\nimport FetchButton from \"components/FetchButton\";\r\nimport PokemonList from 'components/PokemonList';\r\nimport Attribution from 'components/Attribution';\r\nimport ExclusiveTypeFilter from 'components/ExclusiveTypeFilter';\r\nimport TypeMatchupModal from 'components/TypeMatchupModal';\r\nimport RegionFilters from 'components/RegionFilters';\r\nimport NoPokemonPrompt from 'components/NoPokemonPrompt';\r\n\r\n\r\nconst App = () => {\r\n  const [loadingPokes, setLoadingPokes] = React.useState(false);\r\n  const [loadingTypeData1, setLoadingTypeData1] = React.useState(false);\r\n  const [loadingTypeData2, setLoadingTypeData2] = React.useState(false);\r\n  const [noPokes, setNoPokes] = React.useState(false);\r\n  const [showModal, setShowModal] = React.useState(false);\r\n  const [exclusiveType, setExclusiveType] = React.useState(false);\r\n  const [typeSelect1, setTypeSelect1] = React.useState(\"\");\r\n  const [typeSelect2, setTypeSelect2] = React.useState(\"\");\r\n  \r\n  const [typeData1, setTypeData1] = React.useState({} as IPokemonTypeData);\r\n  const [typeData2, setTypeData2] = React.useState({} as IPokemonTypeData);\r\n  \r\n  const [type1, setType1] = React.useState({} as IPokemonType)\r\n  const [type2, setType2] = React.useState({} as IPokemonType)\r\n\r\n  const [pokemon, setPokemon] = React.useState([] as IPokemon[]);\r\n  const [regionFilters, setRegionFilters] = React.useState([] as string[]);\r\n\r\n  React.useEffect(() => {\r\n    if (loadingTypeData1 && !loadingTypeData2 && typeData1.damage_relations) {\r\n      setLoadingTypeData1(false);\r\n    } else if (loadingTypeData2 && !loadingTypeData1 && typeData2.damage_relations) {\r\n      setLoadingTypeData2(false);\r\n    } else if (loadingTypeData1 && loadingTypeData2 \r\n      && typeData1.damage_relations && typeData2.damage_relations) {\r\n      setLoadingTypeData1(false);\r\n      setLoadingTypeData2(false);\r\n    }\r\n    \r\n  }, [loadingTypeData1, loadingTypeData2, typeData1, typeData2, typeSelect1, typeSelect2])\r\n\r\n  const changeType1 = async (type: string) => {\r\n    if (type === \"\") {\r\n      setTypeData1({} as IPokemonTypeData);\r\n      setTypeSelect1(type);\r\n\r\n      return;\r\n    }\r\n\r\n    setLoadingTypeData1(true);\r\n    setTypeData1({} as IPokemonTypeData);\r\n    setTypeSelect1(type);\r\n\r\n    setTypeData1(await getPokemonTypeData(type));    \r\n  }\r\n\r\n  const changeType2 = async (type: string) => {\r\n    if (type === \"\") {\r\n      setTypeData2({} as IPokemonTypeData);\r\n      setTypeSelect2(type);\r\n\r\n      return;\r\n    }\r\n\r\n    setLoadingTypeData2(true);\r\n    setTypeData2({} as IPokemonTypeData);\r\n    setTypeSelect2(type);\r\n\r\n    setTypeData2(await getPokemonTypeData(type));\r\n  }\r\n\r\n  const pushPokemonData = async (data: IPokemonFromType[]) => {\r\n    if (data.length === 0) {\r\n      setNoPokes(true);\r\n\r\n      setTimeout(() => setNoPokes(false), 3000);\r\n\r\n      return;\r\n    }\r\n\r\n    setNoPokes(false);\r\n\r\n    const filteredData = filterOutAlternatePokemon(data);\r\n    const pokemonDataSet: IPokemon[] = [];\r\n\r\n    for (const pokemonType of filteredData) {\r\n      let pokemonData = await getPokemonData(pokemonType);\r\n\r\n      pokemonDataSet.push({\r\n        id: pokemonData.data.id,\r\n        name: pokemonData.data.name,\r\n        number: pokemonData.data.species.url.split(\"/\")[6],\r\n        imageUrl: pokemonData.data.sprites.front_default,\r\n        type1: pokemonData.data.types[0].type.name,\r\n        type2: pokemonData.data.types[1]?.type.name,\r\n      })\r\n\r\n      setPokemon([...pokemonDataSet]);\r\n    }\r\n  }\r\n\r\n  const fetchPokemon = async () => {\r\n    if (loadingTypeData1 || loadingTypeData2) {\r\n      setPokemon([]);\r\n      \r\n      return;\r\n    }\r\n\r\n    if (!typeSelect1 && !typeSelect2) {\r\n      return;\r\n    }\r\n    \r\n    setPokemon([]);\r\n    setLoadingPokes(true);\r\n\r\n    if (typeData1.damage_relations && typeData2.damage_relations) {      \r\n      let damages1 = typeData1.damage_relations;\r\n\r\n      setType1({\r\n        name: typeData1.name,\r\n        strongAgainst: damages1.double_damage_to.map((t: IPokemonTypeDataItem) => t.name),\r\n        vulnerableTo: damages1.double_damage_from.map((t: IPokemonTypeDataItem) => t.name),\r\n        weakAgainst: damages1.half_damage_to.map((t: IPokemonTypeDataItem) => t.name),\r\n        resistantTo: damages1.half_damage_from.map((t: IPokemonTypeDataItem) => t.name),\r\n        zeroAgainst: damages1.no_damage_to.map((t: IPokemonTypeDataItem) => t.name),\r\n        immuneTo: damages1.no_damage_from.map((t: IPokemonTypeDataItem) => t.name),\r\n      });\r\n      \r\n      let damages2 = typeData2.damage_relations;\r\n\r\n      setType2({\r\n        name: typeData2.name,\r\n        strongAgainst: damages2.double_damage_to.map((t: IPokemonTypeDataItem) => t.name),\r\n        vulnerableTo: damages2.double_damage_from.map((t: IPokemonTypeDataItem) => t.name),\r\n        weakAgainst: damages2.half_damage_to.map((t: IPokemonTypeDataItem) => t.name),\r\n        resistantTo: damages2.half_damage_from.map((t: IPokemonTypeDataItem) => t.name),\r\n        zeroAgainst: damages2.no_damage_to.map((t: IPokemonTypeDataItem) => t.name),\r\n        immuneTo: damages1.no_damage_from.map((t: IPokemonTypeDataItem) => t.name),\r\n      });\r\n\r\n      let intersection = typeData1.pokemon\r\n        .filter((t) => typeData2.pokemon\r\n          .map((p) => p.pokemon.name).includes(t.pokemon.name));\r\n                  \r\n      await pushPokemonData(intersection);\r\n    } else if (typeData1.damage_relations) {\r\n      let damages = typeData1.damage_relations;\r\n\r\n      setType1({\r\n        name: typeData1.name,\r\n        strongAgainst: damages.double_damage_to.map((t) => t.name),\r\n        vulnerableTo: damages.double_damage_from.map((t) => t.name),\r\n        weakAgainst: damages.half_damage_to.map((t) => t.name),\r\n        resistantTo: damages.half_damage_from.map((t) => t.name),\r\n        zeroAgainst: damages.no_damage_to.map((t) => t.name),\r\n        immuneTo: damages.no_damage_from.map((t) => t.name),\r\n      });\r\n\r\n      setType2({} as IPokemonType);\r\n      \r\n      await pushPokemonData(typeData1.pokemon);\r\n    } else if (typeData2.damage_relations) {\r\n      let damages = typeData2.damage_relations;\r\n\r\n      setType2({\r\n        name: typeData2.name,\r\n        strongAgainst: damages.double_damage_to.map((t) => t.name),\r\n        vulnerableTo: damages.double_damage_from.map((t) => t.name),\r\n        weakAgainst: damages.half_damage_to.map((t) => t.name),\r\n        resistantTo: damages.half_damage_from.map((t) => t.name),\r\n        zeroAgainst: damages.no_damage_to.map((t) => t.name),\r\n        immuneTo: damages.no_damage_from.map((t) => t.name),\r\n      });\r\n\r\n      setType1({} as IPokemonType);\r\n      \r\n      await pushPokemonData(typeData2.pokemon);\r\n    }\r\n\r\n    setLoadingPokes(false);\r\n  }\r\n\r\n  const toggleExclusiveType = () => {\r\n    setExclusiveType(!exclusiveType);\r\n  }\r\n  \r\n  const checkFilters = (data: IPokemon[]) => {    \r\n    let filteredByRegion = regionFilters.length > 0\r\n      ? data.filter((p) => \r\n        regionFilters.some((r) => \r\n          getRegionsForPokemon(p).includes(r)))\r\n      : data;\r\n\r\n    let filteredByRegionAndType = (!typeSelect2 && exclusiveType) \r\n      ? filteredByRegion.filter((x) => x.type1 === typeSelect1 && x.type2 === undefined) \r\n      : filteredByRegion;\r\n    \r\n    return filteredByRegionAndType;\r\n  }\r\n\r\n  const changeRegionFilter = (region: string) => {\r\n    if (regionFilters.includes(region)) {\r\n      setRegionFilters(regionFilters.filter((x) => x !== region));\r\n    } else {\r\n      setRegionFilters([...regionFilters, region]);\r\n    }\r\n  }\r\n\r\n  return <div className=\"App my-2 mx-auto\">\r\n      <h3>Pokemon Types</h3>\r\n      <TypeSelect title={\"Type 1\"} value={typeSelect1} onChange={changeType1} />\r\n      <ExclusiveTypeFilter checked={exclusiveType && !typeSelect2} onChange={toggleExclusiveType} />\r\n      <TypeSelect title={\"Type 2\"} value={typeSelect2} onChange={changeType2} />\r\n      { (pokemon.length > 0) && <button className=\"btn btn-primary d-block mx-auto my-3\" onClick={() => setShowModal(true)}>Show Type Matchups</button>}\r\n      <TypeMatchupModal show={showModal} onHide={() => setShowModal(false)} type1={type1} type2={type2}/>\r\n      <FetchButton disabled={loadingPokes || loadingTypeData1 || loadingTypeData2} loading={loadingPokes} onClick={fetchPokemon} />\r\n      {\r\n        pokemon.length > 0 && <RegionFilters data={regionFilters} onChange={changeRegionFilter} />\r\n      }\r\n      {noPokes && <NoPokemonPrompt />}\r\n      <PokemonList data={checkFilters(pokemon)} />\r\n      <Attribution />\r\n  </div>\r\n}\r\n\r\nexport default App;\r\n","\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from 'App';\r\n\r\n//import reportWebVitals from './reportWebVitals';\r\nimport './index.css';\r\nimport \"./bootstrap.min.css\";\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n//reportWebVitals();\r\n"],"sourceRoot":""}